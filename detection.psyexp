<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.1.4">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001', 'eye_tracking': 'True'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="2" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="deg" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="detection" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="warning" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="detection_trial">
      <RoutineSettingsComponent name="detection_trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="detection_trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="send_event" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="grating_angle = np.random.choice(np.arange((- np.pi), np.pi, ((2 * np.pi) / 32)));&amp;#10;grating_x = (grating_eccentricity * np.cos(grating_angle));&amp;#10;grating_y = (grating_eccentricity * np.sin(grating_angle));&amp;#10;if (expInfo[&quot;eye_tracking&quot;]) {&amp;#10;    send_event(device, &quot;trial_start&quot;, clock_offset_ns);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="grating_angle = np.random.choice(&amp;#10;    np.arange(-np.pi, np.pi,  2 * np.pi / 32)&amp;#10;    )&amp;#10;grating_x = grating_eccentricity * np.cos(grating_angle)&amp;#10;grating_y = grating_eccentricity * np.sin(grating_angle)&amp;#10;&amp;#10;if expInfo['eye_tracking']:&amp;#10;    send_event(device, 'trial_start', clock_offset_ns)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="send_event" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="fixation_D1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="fixation_D1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(1, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.9" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <GratingComponent name="grating_D1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="add" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="grating_contrast" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="grating_D1" valType="code" updates="None" name="name"/>
        <Param val="grating_in_D1" valType="num" updates="set every repeat" name="opacity"/>
        <Param val="45" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(grating_x, grating_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="6" valType="num" updates="constant" name="sf"/>
        <Param val="(1, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </GratingComponent>
      <GratingComponent name="noise_D1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="noise_contrast" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="noise_D1" valType="code" updates="None" name="name"/>
        <Param val="0" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </GratingComponent>
      <CodeComponent name="noise_code_D1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="noise_D1 = new NoiseStim({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;pink_noise_1&quot;, &quot;units&quot;: &quot;height&quot;, &quot;noiseImage&quot;: null, &quot;mask&quot;: &quot;circle&quot;, &quot;ori&quot;: 0.0, &quot;pos&quot;: [0, 0], &quot;size&quot;: [1, 1], &quot;sf&quot;: null, &quot;phase&quot;: 0.0, &quot;color&quot;: [1, 1, 1], &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;opacity&quot;: null, &quot;blendmode&quot;: &quot;add&quot;, &quot;contrast&quot;: 1.0, &quot;texRes&quot;: 256, &quot;filter&quot;: null, &quot;noiseType&quot;: &quot;Filtered&quot;, &quot;noiseElementSize&quot;: [0.0625], &quot;noiseBaseSf&quot;: 8.0, &quot;noiseBW&quot;: 1.0, &quot;noiseBWO&quot;: 30.0, &quot;noiseOri&quot;: 0.0, &quot;noiseFractalPower&quot;: (- 1.25), &quot;noiseFilterLower&quot;: 1.0, &quot;noiseFilterUpper&quot;: 8.0, &quot;noiseFilterOrder&quot;: (- 2.0), &quot;noiseClip&quot;: 3.0, &quot;imageComponent&quot;: &quot;Phase&quot;, &quot;interpolate&quot;: false, &quot;depth&quot;: 0.0});&amp;#10;noise_D1.buildNoise();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="noise_D1 = NoiseStim(&amp;#10;    win=win, name='pink_noise_1', units='height',&amp;#10;    noiseImage=None, mask='circle',&amp;#10;    ori=0.0, pos=(0, 0), size=(1, 1), sf=None,&amp;#10;    phase=0.0,&amp;#10;    color=[1,1,1], colorSpace='rgb', opacity=None, blendmode='add', contrast=1.0,&amp;#10;    texRes=256, filter=None,&amp;#10;    noiseType='Filtered', noiseElementSize=[0.0625], &amp;#10;    noiseBaseSf=8.0, noiseBW=1.0,&amp;#10;    noiseBWO=30.0, noiseOri=0.0,&amp;#10;    noiseFractalPower=-1.25,noiseFilterLower=1.0,&amp;#10;    noiseFilterUpper=8.0, noiseFilterOrder=-2.0,&amp;#10;    noiseClip=3.0, imageComponent='Phase', interpolate=False, depth=0.0)&amp;#10;noise_D1.buildNoise()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="noise_code_D1" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <GratingComponent name="grating_D2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="add" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="grating_contrast" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="grating_D2" valType="code" updates="None" name="name"/>
        <Param val="grating_in_D2" valType="num" updates="set every repeat" name="opacity"/>
        <Param val="45" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(grating_x, grating_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="6" valType="num" updates="constant" name="sf"/>
        <Param val="(1, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2.25" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </GratingComponent>
      <GratingComponent name="noise_D2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="noise_contrast" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="noise_D2" valType="code" updates="None" name="name"/>
        <Param val="0" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2.25" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </GratingComponent>
      <CodeComponent name="noise_code_D2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="noise_D2 = new NoiseStim({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;pink_noise_1&quot;, &quot;units&quot;: &quot;height&quot;, &quot;noiseImage&quot;: null, &quot;mask&quot;: &quot;circle&quot;, &quot;ori&quot;: 0.0, &quot;pos&quot;: [0, 0], &quot;size&quot;: [1, 1], &quot;sf&quot;: null, &quot;phase&quot;: 0.0, &quot;color&quot;: [1, 1, 1], &quot;colorSpace&quot;: &quot;rgb&quot;, &quot;opacity&quot;: null, &quot;blendmode&quot;: &quot;add&quot;, &quot;contrast&quot;: 1.0, &quot;texRes&quot;: 256, &quot;filter&quot;: null, &quot;noiseType&quot;: &quot;Filtered&quot;, &quot;noiseElementSize&quot;: [0.0625], &quot;noiseBaseSf&quot;: 8.0, &quot;noiseBW&quot;: 1.0, &quot;noiseBWO&quot;: 30.0, &quot;noiseOri&quot;: 0.0, &quot;noiseFractalPower&quot;: (- 1.25), &quot;noiseFilterLower&quot;: 1.0, &quot;noiseFilterUpper&quot;: 8.0, &quot;noiseFilterOrder&quot;: (- 2.0), &quot;noiseClip&quot;: 3.0, &quot;imageComponent&quot;: &quot;Phase&quot;, &quot;interpolate&quot;: false, &quot;depth&quot;: 0.0});&amp;#10;noise_D2.buildNoise();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="noise_D2 = NoiseStim(&amp;#10;    win=win, name='pink_noise_1', units='height',&amp;#10;    noiseImage=None, mask='circle',&amp;#10;    ori=0.0, pos=(0, 0), size=(1, 1), sf=None,&amp;#10;    phase=0.0,&amp;#10;    color=[1,1,1], colorSpace='rgb', opacity=None, blendmode='add', contrast=1.0,&amp;#10;    texRes=256, filter=None,&amp;#10;    noiseType='Filtered', noiseElementSize=[0.0625], &amp;#10;    noiseBaseSf=8.0, noiseBW=1.0,&amp;#10;    noiseBWO=30.0, noiseOri=0.0,&amp;#10;    noiseFractalPower=-1.25,noiseFilterLower=1.0,&amp;#10;    noiseFilterUpper=8.0, noiseFilterOrder=-2.0,&amp;#10;    noiseClip=3.0, imageComponent='Phase', interpolate=False, depth=0.0)&amp;#10;noise_D2.buildNoise()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="noise_code_D2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="correct_key" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="setup">
      <RoutineSettingsComponent name="setup" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="setup" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy_visionscience.noise import NoiseStim&amp;#10;&amp;#10;import time, atexit&amp;#10;from pupil_labs.realtime_api.simple import discover_one_device&amp;#10;&amp;#10;def send_event(device, name, clock_offset):&amp;#10;    client_time = time.time_ns()&amp;#10;    device_time = client_time - clock_offset&amp;#10;    device.send_event(&amp;#10;        name,&amp;#10;        event_timestamp_unix_ns=device_time&amp;#10;    )&amp;#10;    return client_time, device_time&amp;#10;    &amp;#10;def stop_recording(device):&amp;#10;    device.recording_stop_and_save()&amp;#10;    print(&quot;Recording stopped&quot;)&amp;#10;    device.close()&amp;#10; &amp;#10;if expInfo['eye_tracking']:&amp;#10;    device = discover_one_device(max_search_duration_seconds=10)&amp;#10;    if device is None:&amp;#10;        print(&quot;No eye-tracking device found.&quot;)&amp;#10;        raise SystemExit(-1)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {NoiseStim} from 'psychopy_visionscience/noise';&amp;#10;import * as time from 'time';&amp;#10;import * as atexit from 'atexit';&amp;#10;import {discover_one_device} from 'pupil_labs/realtime_api/simple';&amp;#10;function send_event(device, name, clock_offset) {&amp;#10;    var client_time, device_time;&amp;#10;    client_time = time.time_ns();&amp;#10;    device_time = (client_time - clock_offset);&amp;#10;    device.send_event(name, {&quot;event_timestamp_unix_ns&quot;: device_time});&amp;#10;    return [client_time, device_time];&amp;#10;}&amp;#10;function stop_recording(device) {&amp;#10;    device.recording_stop_and_save();&amp;#10;    console.log(&quot;Recording stopped&quot;);&amp;#10;    device.close();&amp;#10;}&amp;#10;if (expInfo[&quot;eye_tracking&quot;]) {&amp;#10;    device = discover_one_device({&quot;max_search_duration_seconds&quot;: 10});&amp;#10;    if ((device === null)) {&amp;#10;        console.log(&quot;No eye-tracking device found.&quot;);&amp;#10;        throw new SystemExit((- 1));&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="if expInfo['eye_tracking']:&amp;#10;    stop_recording(device)" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="if (expInfo[&quot;eye_tracking&quot;]) {&amp;#10;    stop_recording(device);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="calibration">
      <RoutineSettingsComponent name="calibration" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="calibration" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="polygon" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(2.5, 2.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="done_calibrating" plugin="None">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="done_calibrating" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="calibration_prompt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="2" valType="num" updates="constant" name="letterHeight"/>
        <Param val="calibration_prompt" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -10)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press 'space' when calibration is complete." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="start_recording" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (expInfo[&quot;eye_tracking&quot;]) {&amp;#10;    estimate = device.estimate_time_offset();&amp;#10;    clock_offset_ns = util.round((estimate.time_offset_ms.mean * 1000000));&amp;#10;    recording_id = device.recording_start();&amp;#10;    console.log(`Started recording with id ${recording_id}`);&amp;#10;    console.log(&quot;Waiting 5s...&quot;);&amp;#10;    time.sleep(5);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if expInfo['eye_tracking']:&amp;#10;    estimate = device.estimate_time_offset()&amp;#10;    clock_offset_ns = round(estimate.time_offset_ms.mean * 1000000)&amp;#10;    recording_id = device.recording_start()&amp;#10;    print(f&quot;Started recording with id {recording_id}&quot;)&amp;#10;    print(&quot;Waiting 5s...&quot;)&amp;#10;    time.sleep(5)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="start_recording" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="instruction">
      <RoutineSettingsComponent name="instruction" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instruction" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="instruction_text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruction_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Welcome to the detection experiment.&amp;#10;&amp;#10;On each trial, begin by fixing your gaze on the cross. After the cross disappears, two patches of noise will appear one after the other. One of the noise patches will contain a small oriented grating. Please indicate whether the grating was in the first (press left) or second (press right) patch of noise. Try to keep your gaze in the center of the display.&amp;#10;&amp;#10;Press space to continue to the eye tracker calibration." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="30" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="instruction_key" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="instruction_key" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="setup"/>
    <Routine name="instruction"/>
    <Routine name="calibration"/>
    <LoopInitiator loopType="TrialHandler" name="detection_trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'noise_contrast': 1, 'grating_contrast': 0.01, 'grating_eccentricity': 0, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.01, 'grating_eccentricity': 3, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.01, 'grating_eccentricity': 6, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.01, 'grating_eccentricity': 9, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.01, 'grating_eccentricity': 12, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.01, 'grating_eccentricity': 0, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.01, 'grating_eccentricity': 3, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.01, 'grating_eccentricity': 6, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.01, 'grating_eccentricity': 9, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.01, 'grating_eccentricity': 12, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.022, 'grating_eccentricity': 0, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.022, 'grating_eccentricity': 3, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.022, 'grating_eccentricity': 6, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.022, 'grating_eccentricity': 9, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.022, 'grating_eccentricity': 12, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.022, 'grating_eccentricity': 0, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.022, 'grating_eccentricity': 3, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.022, 'grating_eccentricity': 6, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.022, 'grating_eccentricity': 9, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.022, 'grating_eccentricity': 12, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.048, 'grating_eccentricity': 0, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.048, 'grating_eccentricity': 3, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.048, 'grating_eccentricity': 6, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.048, 'grating_eccentricity': 9, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.048, 'grating_eccentricity': 12, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.048, 'grating_eccentricity': 0, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.048, 'grating_eccentricity': 3, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.048, 'grating_eccentricity': 6, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.048, 'grating_eccentricity': 9, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.048, 'grating_eccentricity': 12, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.1, 'grating_eccentricity': 0, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.1, 'grating_eccentricity': 3, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.1, 'grating_eccentricity': 6, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.1, 'grating_eccentricity': 9, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.1, 'grating_eccentricity': 12, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.1, 'grating_eccentricity': 0, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.1, 'grating_eccentricity': 3, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.1, 'grating_eccentricity': 6, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.1, 'grating_eccentricity': 9, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.1, 'grating_eccentricity': 12, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.23, 'grating_eccentricity': 0, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.23, 'grating_eccentricity': 3, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.23, 'grating_eccentricity': 6, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.23, 'grating_eccentricity': 9, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.23, 'grating_eccentricity': 12, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.23, 'grating_eccentricity': 0, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.23, 'grating_eccentricity': 3, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.23, 'grating_eccentricity': 6, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.23, 'grating_eccentricity': 9, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.23, 'grating_eccentricity': 12, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.5, 'grating_eccentricity': 0, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.5, 'grating_eccentricity': 3, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.5, 'grating_eccentricity': 6, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.5, 'grating_eccentricity': 9, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.5, 'grating_eccentricity': 12, 'grating_in_D1': 1, 'grating_in_D2': 0, 'correct_key': 'left'}, {'noise_contrast': 1, 'grating_contrast': 0.5, 'grating_eccentricity': 0, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.5, 'grating_eccentricity': 3, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.5, 'grating_eccentricity': 6, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.5, 'grating_eccentricity': 9, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}, {'noise_contrast': 1, 'grating_contrast': 0.5, 'grating_eccentricity': 12, 'grating_in_D1': 0, 'grating_in_D2': 1, 'correct_key': 'right'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="conditions_detection.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="num"/>
      <Param name="name" updates="None" val="detection_trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="detection_trial"/>
    <LoopTerminator name="detection_trials"/>
  </Flow>
</PsychoPy2experiment>
